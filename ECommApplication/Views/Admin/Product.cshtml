@model ECommApplication.Models.Product
@{
    ViewBag.Title = "Product";
}
@*<script src="//cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>*@
<script type="text/javascript">function bindSubCategory(subCategory) {
        var categoryID = $('#CategoryID').val()
        $.ajax({
            url: "/Bind/BindSubCategory",
            type: "Get",
            data: { 'CategoryID': categoryID },
            datatype: "json",
            success: function (data) {
                $("#SubCategoryID").children('option:not(:first)').remove();
                $.each(data.subcategory, function (i, subcategory) {
                    $("#SubCategoryID").append('<option value="' + subcategory.SubCategoryID + '">' + subcategory.SubCategoryName + '</option>');
                });
                if (subCategory != undefined && subCategory != '')
                    $('#SubCategoryID').val(subCategory)
            }
        });
    }
    function editProduct(e, productId) {
        e.preventDefault();

        $.ajax({
            url: "/Bind/BindProducts",
            type: "Get",
            data: { 'ProductId': productId },
            datatype: "json",
            success: function (data) {
                console.log(data)
                var product = data.products[0];
                $('#CategoryID').val(product.subCategory.category.CategoryID)
                bindSubCategory(product.subCategory.SubCategoryID)
                //  $('#SubCategoryID').val(product.subCategory.SubCategoryID)
                $('#ProductId').val(product.ProductId)
                $('#ProductName').val(product.ProductName)
                $('#ProductDescription').val(product.ProductDescription)
                $('#ProductQty').val(product.ProductQty)
                $('#ProductWeight').val(product.ProductWeight)
                $('#BasePrice').val(product.BasePrice)
                $('#ShippingCharges').val(product.ShippingCharges)
                $('#GST').val(product.GST)
                $('#ServiceTax').val(product.ServiceTax)
                $('#FinalPrice').val(product.FinalPrice)
                $('#DisplayAtHomePage').val(product.DisplayAtHomePage)
                $('#IsActive').val(product.IsActive)


                // load product image data table
                if (product.productImages.length > 0) {
                    productsImages = product.productImages
                }
                else
                    productsImages = []
                loadProductImagesDataTable();


            }
        });
    }

    function editProductImage(e, productImageId) {
        e.preventDefault();

        $.ajax({
            url: "/Bind/BindProductImage",
            type: "Get",
            data: { 'ProductImageID': productImageId },
            datatype: "json",
            success: function (data) {
                //$('#CategoryID').val(product.subCategory.category.CategoryID)
                //bindSubCategory(product.subCategory.SubCategoryID)
                ////  $('#SubCategoryID').val(product.subCategory.SubCategoryID)
                $('#ProductImageID').val(data.productImage.ProductImageID)
                $('#Caption').val(data.productImage.Caption)
                $('#ProductImagePath').val(data.productImage.ProductImagePath)
                $('#ImagePriority').val(data.productImage.Priority)

                $('#DisplayImageAtHomePage').val(data.productImage.IsActive)

                $('#IsActiveImage').val(data.productImage.IsActive)
                //debugger;
                //// load product image data table
                //if (product.productImages.length > 0) {
                //    productsImages = product.productImages
                //    loadProductImagesDataTable();
                //}

            }
        });
    }

    function loadProductImagesDataTable() {

        $('#tblProductImages').DataTable({
            "ordering": true,
            "bJQueryUI": true,
            "sPaginationType": "full_numbers",
            "sDom": '<""l>t<"F"fp>',
            "aaData": productsImages,
            "searching": true,
            "bDestroy":true,
            "aoColumns": [
                { 'mData': 'ProductImageID', "name": "ProductImageID" },
                { 'mData': 'Caption', "name": "Caption" },
                { 'mData': 'Priority', "name": "Priority" },
                { 'mData': 'IsActive', "name": "IsActive" },
                { 'mData': 'DisplayAtHomePage', "name": "DisplayAtHomePage" },
                {
                    'mData': null,
                    "mRender": function (data, type, obj) {
                        console.log(obj.ProductImagePath )
                        return `<img src='` + obj.ProductImagePath + `' class="span3"  >`;
                    }
                },
                {
                    'mData': null,
                    "mRender": function (data, type, obj) {
                        return `<a class="btn btn-primary" href="#" onclick="javascript:editProductImage(event,'` + obj.ProductImageID + `')">Edit</a>

                            `;
                    }
                },
            ]

        });
    }
    function uploadImage() {

        var formdata = new FormData(); //FormData object
        var fileInput = document.getElementById('imageFile');
        //Iterating through each files selected in fileInput
        for (i = 0; i < fileInput.files.length; i++) {
            //Appending each file to FormData object
            formdata.append(fileInput.files[i].name, fileInput.files[i]);
        }
        //formdata.append("caption", $('#Caption').val())
        //formdata.append("priority", $('#Priority').val())
        //formdata.append("isActive", $('#IsActiveImage').val())



        var objArr = [];

        formdata.append("Caption", $('#Caption').val())
        formdata.append("Priority", $('#ImagePriority').val())
        formdata.append("IsActive", $('#IsActiveImage').val())
        formdata.append("ProductID", $('#ProductId').val())
        formdata.append("ProductImageID", $('#ProductImageID').val())
        formdata.append("ProductImagePath", $('#ProductImagePath').val())
        formdata.append("DisplayAtHomePage", $('#DisplayImageAtHomePage').val())

        //JSON obj
        formdata.append('objArr', objArr);

        $.ajax({
            url: '/Admin/UploadImage',
            type: "POST",
            processData: false, // Not to process data
            data: formdata,
            contentType: false,
            success: function (result) {
                productsImages = result.productImages
                loadProductImagesDataTable();
            },
            error: function (err) {
                alert(err.statusText);
            }
        });



    }

    $(document).ready(function () {
        //bindSubCategory($('#CategoryID'));
        $('#btnSaveImage').click(function (e) {
            e.preventDefault();
            uploadImage()
        })
        var productsData = "";
        var productsImages = "";
        var category = null;
        $.ajax({
            url: "/Bind/BindProducts",
            type: "POST",
            datatype: "json",
            success: function (data) {
                productsData = data;
                loadProductsDataTable();
            },
        });

        function loadProductsDataTable() {
            $('#tblProducts').DataTable({
                "ordering": true,
                "bJQueryUI": true,
                "sPaginationType": "full_numbers",
                "sDom": '<""l>t<"F"fp>',
                "scrollCollapse": true,
                "aaData": productsData.products,
                "searching": true,
                "fixedColumns": {
                    "rightColumns": 1
                },
                "dom": "Blfrtip",
                //"bFilter":true,
                //"bProcessing": true,
                "aLengthMenu": [[10, 20, 50, 100, -1], [10, 20, 50, 100, "All"]],
                "iDisplayLength": 10,
                "aoColumns": [
                    { 'mData': 'ProductId', "name": "ProductId" },
                    { 'mData': 'ProductName', "name": "ProductName" },
                    { 'mData': 'ProductDescription', "name": "ProductDescription" },
                    { 'mData': 'ProductQty', "name": "ProductQty" },
                    { 'mData': 'ProductWeight', "name": "ProductWeight" },
                    { 'mData': 'BasePrice', "name": "BasePrice" },
                    { 'mData': 'ShippingCharges', "name": "ShippingCharges" },
                    { 'mData': 'GST', "name": "GST" },
                    { 'mData': 'ServiceTax', "name": "ServiceTax" },
                    { 'mData': 'FinalPrice', "name": "FinalPrice" },
                    { 'mData': 'DisplayAtHomePage', "name": "DisplayAtHomePage" },
                    { 'mData': 'IsActive', "name": "IsActive" },
                    {
                        'mData': null,
                        "mRender": function (data, type, obj) {
                            return `<a class="btn btn-primary" href="#" onclick="javascript:editProduct(event,'` + obj.ProductId + `')">Edit</a>

                            `;
                        }
                    },
                ]

            });
        }
        //<a class="btn btn-danger" href="#" onclick="javascript:deleteCategory(event,'` + obj.ID + `')">Delete</a>
        //  <a class="btn btn-danger" href="#" onclick="javascript:deleteCategory(event,'` + obj.ProductID + `')">Delete</a>
    })</script>
<div class="widget-content">
    <a href="#myModal" data-toggle="modal" class="btn btn-success">View Popup</a>
    <div id="myModal" class="modal hide">
        <div class="modal-header">
            <button data-dismiss="modal" class="close" type="button">×</button>
            <h3>Pop up Header</h3>
        </div>
        <div class="modal-body">
            <p>Here is the text coming you can put also image if you want…</p>
        </div>
    </div>
</div>

<div class="container-fluid">
    <div class="row-fluid">
        <div class="span12">
            <div class="widget-box">
                <div class="widget-title">
                    <span class="icon"> <i class="icon-align-justify"></i> </span>
                    <h5>Product-info</h5>
                </div>
                <div class="widget-content nopadding">
                    <form action="/Admin/Product" method="post" class="form-horizontal">
                        @Html.AntiForgeryToken()
                        <div class="control-group span5">
                            <label class="control-label">Category :</label>
                            <div class="controls">
                                @Html.HiddenFor(a => a.ProductId)
                                @Html.DropDownListFor(a => a.subCategory.category.CategoryID, new SelectList((new ECommApplication.Models.SubCategory().getCategories()), "CategoryID", "CategoryName"), "--Select--", new { @onchange = "bindSubCategory()", @id = "CategoryID" })
                            </div>
                        </div>
                        <div class="control-group span5">
                            <label class="control-label">Sub Category :</label>
                            <div class="controls">
                                @Html.DropDownListFor(a => a.subCategory.SubCategoryID, new SelectList(string.Empty, "Value", "Text"), "--Select--", new { @id = "SubCategoryID" })
                            </div>
                        </div>
                        <div class="control-group span5">
                            <label class="control-label">Product Name:</label>
                            <div class="controls">
                                @Html.TextBoxFor(a => a.ProductName, new { @maxlength = "100" })
                                @Html.ValidationMessageFor(a => a.ProductName, "", new { @class = "help-inline" })
                            </div>
                        </div>
                        <div class="control-group span5">
                            <label class="control-label">Product Description:</label>
                            <div class="controls">
                                @Html.TextBoxFor(a => a.ProductDescription, new { @maxlength = "100" })
                            </div>
                        </div>
                        <div class="control-group span5">
                            <label class="control-label">Product Qty:</label>
                            <div class="controls">
                                @Html.TextBoxFor(a => a.ProductQty, new { @maxlength = "100" })
                            </div>
                        </div>
                        <div class="control-group span5">
                            <label class="control-label">Product Weight:</label>
                            <div class="controls">
                                @Html.TextBoxFor(a => a.ProductWeight, new { @maxlength = "100" })
                            </div>
                        </div>
                        <div class="control-group span5">
                            <label class="control-label">Base Price:</label>
                            <div class="controls">
                                <div class="input-prepend">
                                    <span class="add-on">₹</span>
                                    @Html.TextBoxFor(a => a.BasePrice, new { @maxlength = "100", @onKeypress = "return OnlyDecimals(event)", @class = "span11" })
                                </div>

                            </div>
                        </div>
                        <div class="control-group span5">
                            <label class="control-label">Shipping Charges:</label>
                            <div class="controls">
                                <div class="input-prepend">
                                    <span class="add-on">₹</span>
                                    @Html.TextBoxFor(a => a.ShippingCharges, new { @maxlength = "100", @onKeypress = "return OnlyDecimals(event)", @class = "span11" })
                                </div>
                            </div>
                        </div>
                        <div class="control-group span5">
                            <label class="control-label">GST :</label>
                            <div class="controls">
                                <div class="input-append">

                                    @Html.TextBoxFor(a => a.GST, new { @maxlength = "100", @onKeypress = "return OnlyDecimals(event)", @class = "span11" })
                                    <span class="add-on">%</span>
                                </div>
                            </div>
                        </div>
                        <div class="control-group span5">
                            <label class="control-label">Service Tax:</label>
                            <div class="controls">
                                <div class="input-append">

                                    @Html.TextBoxFor(a => a.ServiceTax, new { @maxlength = "100", @onKeypress = "return OnlyDecimals(event)", @class = "span11" })
                                    <span class="add-on">%</span>
                                </div>
                            </div>
                        </div>
                        <div class="control-group span5">
                            <label class="control-label">Final Price:</label>
                            <div class="controls">
                                <div class="input-append">
                                    <span class="add-on">₹</span>
                                    @Html.TextBoxFor(a => a.FinalPrice, new { @maxlength = "100", @onKeypress = "return OnlyDecimals(event)", @class = "span11" })
                                </div>
                            </div>
                        </div>
                        <div class="control-group span5">
                            <label class="control-label">Display at Home Page :</label>
                            <div class="controls">
                                @Html.DropDownListFor(a => a.DisplayAtHomePage, ECommApplication.Common.CommonFunctions.SelectListYesNo(), "--Select--")
                                @Html.ValidationMessageFor(a => a.DisplayAtHomePage, "", new { @class = "help-inline" })
                            </div>
                        </div>
                        <div class="control-group span7">
                            <label class="control-label">Is Active :</label>
                            <div class="controls">
                                @Html.DropDownListFor(a => a.IsActive, ECommApplication.Common.CommonFunctions.SelectListYesNo(), "--Select--")
                                @Html.ValidationMessageFor(a => a.IsActive, "", new { @class = "help-inline" })
                            </div>
                        </div>
                        <div class="widget-box">
                            <div class="widget-title">
                                <span class="icon"> <i class="icon-align-justify"></i> </span>
                                <h5>Product Image-info</h5>
                            </div>
                            <div class="widget-content nopadding">
                                <div class="control-group ">
                                    <label class="control-label">Upload Image</label>
                                    <div class="controls">
                                        <div class="uploader" id="uniform-undefined"><input type="file" size="19" style="opacity: 0;" id="imageFile"><span class="filename">No file selected</span><span class="action">Choose File</span></div>
                                    </div>
                                </div>
                                <div class="control-group">
                                    <label class="control-label">Caption :</label>
                                    <div class="controls">
                                        <input type="hidden" id="ProductImageID" />
                                        <input type="hidden" id="ProductImagePath" />
                                        <input type="text" id="Caption" name="Caption" />
                                    </div>
                                </div>
                                <div class="control-group">
                                    <label class="control-label">Priority :</label>
                                    <div class="controls">
                                        <input type="text" id="ImagePriority" name="ImagePriority" />
                                    </div>
                                </div>
                                <div class="control-group">
                                    <label class="control-label">Is Active :</label>
                                    <div class="controls">
                                        @*<input type="checkbox" id="IsActiveImage" name="IsActiveImage" />*@
                                        <select id="IsActiveImage" name="IsActiveImage">
                                            <option value="">--Select--</option>
                                            <option value="Yes">Yes</option>
                                            <option value="No">No</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="control-group">
                                    <label class="control-label">Display at Home Page :</label>
                                    <div class="controls">
                                        @*<input type="checkbox" id="DisplayAtHomePage" name="DisplayAtHomePage" />*@
                                        <select id="DisplayImageAtHomePage" name="DisplayImageAtHomePage">
                                            <option value="">--Select--</option>
                                            <option value="Yes">Yes</option>
                                            <option value="No">No</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="form-actions">
                                    <button type="submit" class="btn btn-success" id="btnSaveImage">Save Image</button>
                                    <button type="button" id="btnClear" class="btn btn-success" onclick="clearRecord()">Clear</button>
                                </div>
                                <div class="widget-box">
                                    <div class="widget-title">
                                        <span class="icon"><i class="icon-th"></i></span>
                                        <h5>Product Images:</h5>
                                    </div>
                                    <div class="widget-content nopadding">
                                        <table class="table table-bordered data-table" id="tblProductImages">
                                            <thead>
                                                <tr>
                                                    <th width="5%">ID</th>
                                                    <th width="30%">Caption</th>
                                                    <th width="10%">Priority</th>
                                                    <th width="10%">Active</th>
                                                    <th width="10%">Display at Home Page</th>
                                                    <th width="35%">Image</th>
                                                    <th width="20%"></th>
                                                </tr>
                                            </thead>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-actions">
                            <button type="submit" class="btn btn-success" id="btnSave">Save</button>
                            <button type="button" id="btnClear" class="btn btn-success" onclick="clearRecord()">Clear</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <hr />
        <div class="row-fluid">
            <div class="span12">
                <div class="widget-box">
                    <div class="widget-title">
                        <span class="icon"><i class="icon-th"></i></span>
                        <h5>Products:</h5>
                    </div>
                    <div class="widget-content nopadding">
                        <table class="table table-bordered data-table" id="tblProducts">
                            <thead>
                                <tr>
                                    <th width="20px">Product ID</th>
                                    <th width="300px">Product Name</th>
                                    <th width="300px">Product Description</th>
                                    <th width="20px">Product Qty</th>
                                    <th width="20px">Product Weight</th>
                                    <th width="20px">Base Price</th>
                                    <th width="20px">Shipping Charges</th>
                                    <th width="20px">GST</th>
                                    <th width="20px">Service Tax</th>
                                    <th width="20px">Final Price</th>
                                    <th width="100px">Display At Home Page</th>
                                    <th width="20px">Active</th>
                                    <th width="20px"></th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
